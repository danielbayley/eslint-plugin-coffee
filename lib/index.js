// Generated by CoffeeScript 2.3.1
(function() {
  var configureAsError, dontApply, fflatten, ffromPairs, flow, fmap, fmapValues, fmapWithKey, fpickBy, parseForESLint, rules, turnOff, unusable;

  ({
    flow,
    map: fmap,
    flatten: fflatten,
    fromPairs: ffromPairs,
    mapValues: fmapValues,
    pickBy: fpickBy
  } = require('lodash/fp'));

  fmapWithKey = fmap.convert({
    cap: false
  });

  ({parseForESLint} = require('./parser'));

  unusable = ['no-sequences'];

  dontApply = [
    'prefer-const',
    'no-const-assign',
    'func-style',
    'eqeqeq',
    'prefer-arrow-callback',
    'arrow-body-style',
    'no-var',
    'one-var',
    'no-void',
    'sort-vars',
    'no-octal',
    'no-octal-escape',
    'func-names',
    'no-ternary',
    'init-declarations',
    'import/no-mutable-export', // since you can't control whether an exported member is const - might be nice to implement its "possible future behavior" of checking whether it in fact does get reassigned?)
    'no-label-var',
    'no-extra-label',
    'no-unused-labels',
    'no-labels',
    'no-with',
    'no-fallthrough',
    'no-undef-init',
    'no-undefined',
    'require-await',
    'require-yield',
    'no-dupe-args',
    'getter-return', // could be used for Object.defineProperty() calls?
    'func-name-matching',
    'no-func-assign',
    'max-statements-per-line',
    'no-mixed-requires',
    'no-redeclare',
    'for-direction',
    'no-shadow-restricted-names',
    'no-case-declarations',
    'no-lone-blocks',
    'curly',
    'wrap-iife',
    'template-tag-spacing',
    'switch-colon-spacing',
    'semi',
    'semi-spacing',
    'semi-style',
    'no-extra-semi',
    'no-unexpected-multiline',
    'no-mixed-spaces-and-tabs'
  ];

  rules = flow(fmapWithKey(function(config, rule) {
    return [
      rule,
      {
        ...config,
        module: require(`./rules/${rule}`)
      }
    ];
  }), ffromPairs)({
    'use-isnan': {
      'eslint-recommended': true
    },
    'no-self-compare': {},
    'no-eq-null': {},
    'valid-typeof': {
      'eslint-recommended': true
    },
    'no-negated-condition': {},
    yoda: {},
    camelcase: {},
    'dot-notation': {},
    'no-compare-neg-zero': {
      'eslint-recommended': true
    },
    'no-unreachable': {
      'eslint-recommended': true
    },
    'object-shorthand': {},
    'no-empty-character-class': {
      'eslint-recommended': true
    },
    'no-extra-boolean-cast': {
      'eslint-recommended': true
    },
    'no-regex-spaces': {
      'eslint-recommended': true
    },
    'no-implicit-coercion': {},
    'no-magic-numbers': {},
    'no-self-assign': {
      'eslint-recommended': true
    },
    'operator-assignment': {},
    'no-unused-expressions': {},
    'class-methods-use-this': {},
    'no-await-in-loop': {},
    'prefer-destructuring': {},
    'no-constant-condition': {
      'eslint-recommended': true
    },
    'no-template-curly-in-string': {},
    'no-unneeded-ternary': {},
    'no-unmodified-loop-condition': {},
    'no-unused-vars': {
      'eslint-recommended': true
    },
    'no-use-before-define': {},
    'max-depth': {},
    'vars-on-top': {},
    'guard-for-in': {},
    'no-useless-return': {},
    'arrow-spacing': {},
    'object-curly-spacing': {},
    'capitalized-class-names': {
      plugin: false
    },
    complexity: {},
    'max-len': {},
    'no-invalid-this': {},
    'lines-between-class-members': {},
    'max-lines-per-function': {},
    'no-backticks': {
      plugin: false
    },
    'space-infix-ops': {},
    'space-unary-ops': {},
    'english-operators': {
      plugin: false
    },
    'no-unnecessary-fat-arrow': {
      plugin: false
    },
    'no-this-before-super': {
      'eslint-recommended': true
    },
    'no-cond-assign': {
      'eslint-recommended': true
    },
    'no-inner-declarations': {
      'eslint-recommended': true
    }
  });

  configureAsError = flow(fmapWithKey(function({plugin}, rule) {
    return [[`coffee/${rule}`, 'error'], ...(plugin !== false ? [[rule, 'off']] : [])];
  }), fflatten, ffromPairs);

  turnOff = flow(fmap(function(rule) {
    return [rule, 'off'];
  }), ffromPairs);

  module.exports = {
    rules: fmapValues('module')(rules),
    configs: {
      all: {
        plugins: ['coffee'],
        parser: 'eslint-plugin-coffee',
        rules: {...configureAsError(rules), ...turnOff(dontApply), ...turnOff(unusable)}
      },
      'eslint-recommended': {
        plugins: ['coffee'],
        parser: 'eslint-plugin-coffee',
        rules: {...configureAsError(fpickBy('eslint-recommended')(rules)), ...turnOff(dontApply), ...turnOff(unusable)}
      }
    },
    parseForESLint
  };

}).call(this);
