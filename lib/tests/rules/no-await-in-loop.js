// Generated by CoffeeScript 2.3.1
(function() {
  /**
   * @fileoverview Tests for no-await-in-loop.
   * @author Nat Mote (nmote)
   */
  'use strict';
  var RuleTester, error, rule, ruleTester;

  rule = require('../../rules/no-await-in-loop');

  ({RuleTester} = require('eslint'));

  error = {
    messageId: 'unexpectedAwait',
    type: 'AwaitExpression'
  };

  ruleTester = new RuleTester({
    parser: '../../..'
  });

  ruleTester.run('no-await-in-loop', rule, {
    valid: [
      '->\n  await bar',
      '->\n  for bar of await baz\n    ;',
      '->\n  for bar from await baz\n    ;',
      '->\n  for await bar from await baz\n    ;',
      // While loops
      '->\n  loop\n    foo = ->\n      await bar',
      // Blocked by a function expression
      '->\n  while true\n    y = -> await bar',
      // Blocked by a class method
      '->\n  while yes\n    class Foo\n      foo: -> await bar',
      // Asynchronous iteration intentionally
      '->\n  for await x from xs\n    await f x'
    ],
    invalid: [
      {
        // While loops
        code: '->\n  while baz\n    await bar',
        errors: [error]
      },
      {
        code: '->\n  while await foo()\n    ;',
        errors: [error]
      },
      {
        code: '->\n  while baz\n    for await x from xs\n      ;',
        errors: [
          Object.assign({},
          error,
          {
            type: 'For'
          })
        ]
      },
      {
        // For of loops
        code: '->\n  for bar from baz\n    await bar',
        errors: [error]
      },
      {
        code: '->\n  for bar of baz\n    await bar',
        errors: [error]
      },
      {
        // For in loops
        code: '->\n  for bar in baz\n    await bar',
        errors: [error]
      },
      {
        // Deep in a loop body
        code: '->\n  while yes\n    if bar\n      foo await bar',
        errors: [error]
      },
      {
        // Deep in a loop condition
        code: '->\n  while xyz or 5 > await x\n    ;',
        errors: [error]
      },
      {
        // In a nested loop of for-await-of
        code: '->\n  for await x from xs\n    while 1\n      await f x',
        errors: [error]
      }
    ]
  });

}).call(this);
