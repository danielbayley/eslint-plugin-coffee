// Generated by CoffeeScript 2.3.1
(function() {
  /**
   * @fileoverview Tests for no-ex-assign rule.
   * @author Stephen Murray <spmurrayzzz>
   */
  'use strict';
  var RuleTester, rule, ruleTester;

  //------------------------------------------------------------------------------
  // Requirements
  //------------------------------------------------------------------------------
  rule = require('eslint/lib/rules/no-ex-assign');

  ({RuleTester} = require('eslint'));

  //------------------------------------------------------------------------------
  // Tests
  //------------------------------------------------------------------------------
  ruleTester = new RuleTester({
    parser: '../../..'
  });

  ruleTester.run('no-ex-assign', rule, {
    valid: ['try\ncatch e\n  three = 2 + 1', 'try\ncatch {e}\n  @something = 2', '->\n  try\n  catch e\n   return no'],
    invalid: [
      {
        code: 'try\ncatch e\n  e = 10',
        errors: [
          {
            messageId: 'unexpected',
            type: 'Identifier'
          }
        ]
      },
      {
        code: 'try\ncatch ex\n  ex = 10',
        errors: [
          {
            messageId: 'unexpected',
            type: 'Identifier'
          }
        ]
      },
      {
        code: 'try\ncatch ex\n  [ex] = []',
        errors: [
          {
            messageId: 'unexpected',
            type: 'Identifier'
          }
        ]
      },
      {
        code: 'try\ncatch ex\n  {x: ex = 0} = {}',
        errors: [
          {
            messageId: 'unexpected',
            type: 'Identifier'
          }
        ]
      },
      {
        code: 'try\ncatch {message}\n  message = 10',
        errors: [
          {
            messageId: 'unexpected',
            type: 'Identifier'
          }
        ]
      }
    ]
  });

}).call(this);
