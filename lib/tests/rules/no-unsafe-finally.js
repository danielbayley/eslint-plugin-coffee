// Generated by CoffeeScript 2.3.1
(function() {
  /**
   * @fileoverview Tests for no-unsafe-finally
   * @author Onur Temizkan
   */
  'use strict';
  var RuleTester, rule, ruleTester;

  //------------------------------------------------------------------------------
  // Requirements
  //------------------------------------------------------------------------------
  rule = require('eslint/lib/rules/no-unsafe-finally');

  ({RuleTester} = require('eslint'));

  //------------------------------------------------------------------------------
  // Tests
  //------------------------------------------------------------------------------
  ruleTester = new RuleTester({
    parser: '../../..'
  });

  ruleTester.run('no-unsafe-finally', rule, {
    valid: ["foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    console.log 'hola!'", "foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    console.log('hola!')", 'foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    a = (x) -> return x', 'foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    a = (x) ->\n      throw new Error() unless x', 'foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    a = (x) ->\n      while true\n        if x\n          break\n        else\n          continue', 'foo = ->\n  try\n  finally\n    while true\n      break', 'foo = ->\n  try\n  finally\n    while true\n      continue', 'foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    bar = () =>\n      throw new Error()', 'foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    (x) => x', "foo = ->\n  try\n    return 1\n  finally\n    class bar\n      constructor: ->\n      @ehm: ->\n        return 'Hola!'"],
    invalid: [
      {
        code: 'foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    return 3',
        errors: [
          {
            message: 'Unsafe usage of ReturnStatement.',
            type: 'ReturnStatement',
            line: 7,
            column: 5
          }
        ]
      },
      {
        code: 'foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    if true\n      return 3\n    else\n      return 2',
        errors: [
          {
            message: 'Unsafe usage of ReturnStatement.',
            type: 'ReturnStatement',
            line: 8,
            column: 7
          },
          {
            message: 'Unsafe usage of ReturnStatement.',
            type: 'ReturnStatement',
            line: 10,
            column: 7
          }
        ]
      },
      {
        code: 'foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    return 3',
        errors: [
          {
            message: 'Unsafe usage of ReturnStatement.',
            type: 'ReturnStatement',
            line: 7,
            column: 5
          }
        ]
      },
      {
        code: 'foo = ->\n  try\n    1\n  catch err\n    2\n  finally\n    return (x) -> return y',
        errors: [
          {
            message: 'Unsafe usage of ReturnStatement.',
            type: 'ReturnStatement',
            line: 7,
            column: 5
          }
        ]
      },
      {
        code: 'foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    return { x: (c) -> return c }',
        errors: [
          {
            message: 'Unsafe usage of ReturnStatement.',
            type: 'ReturnStatement',
            line: 7,
            column: 5
          }
        ]
      },
      {
        code: 'foo = ->\n  try\n    return 1\n  catch err\n    return 2\n  finally\n    throw new Error()',
        errors: [
          {
            message: 'Unsafe usage of ThrowStatement.',
            type: 'ThrowStatement',
            line: 7,
            column: 5
          }
        ]
      },
      {
        code: 'foo = ->\n  try\n    foo()\n  finally\n    try\n      bar()\n    finally\n      return',
        errors: [
          {
            message: 'Unsafe usage of ReturnStatement.',
            type: 'ReturnStatement',
            line: 8,
            column: 7
          }
        ]
      },
      {
        code: 'foo = ->\n  while true\n    try\n    finally\n      break',
        errors: [
          {
            message: 'Unsafe usage of BreakStatement.',
            type: 'BreakStatement',
            line: 5,
            column: 7
          }
        ]
      },
      {
        code: 'foo = ->\n  while true\n    try\n    finally\n      continue',
        errors: [
          {
            message: 'Unsafe usage of ContinueStatement.',
            type: 'ContinueStatement',
            line: 5,
            column: 7
          }
        ]
      }
    ]
  });

}).call(this);
