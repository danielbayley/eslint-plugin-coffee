// Generated by CoffeeScript 2.3.1
(function() {
  /**
   * @fileoverview Tests for sort-imports rule.
   * @author Christian Schuller
   */
  'use strict';
  var RuleTester, expectedError, ignoreCaseArgs, rule, ruleTester;

  //------------------------------------------------------------------------------
  // Requirements
  //------------------------------------------------------------------------------
  rule = require('eslint/lib/rules/sort-imports');

  ({RuleTester} = require('eslint'));

  //------------------------------------------------------------------------------
  // Tests
  //------------------------------------------------------------------------------
  ruleTester = new RuleTester({
    parser: '../../..'
  });

  expectedError = {
    message: 'Imports should be sorted alphabetically.',
    type: 'ImportDeclaration'
  };

  ignoreCaseArgs = [
    {
      ignoreCase: true
    }
  ];

  ruleTester.run('sort-imports', rule, {
    valid: [
      "import a from 'foo.js'\nimport b from 'bar.js'\nimport c from 'baz.js'",
      "import * as B from 'foo.js'\nimport A from 'bar.js'",
      "import * as B from 'foo.js'\nimport {a, b} from 'bar.js'",
      "import {b, c} from 'bar.js'\nimport A from 'foo.js'",
      {
        code: "import A from 'bar.js'\nimport {b, c} from 'foo.js'",
        options: [
          {
            memberSyntaxSortOrder: ['single',
          'multiple',
          'none',
          'all']
          }
        ]
      },
      "import {a, b} from 'bar.js'\nimport {c, d} from 'foo.js'",
      "import A from 'foo.js'\nimport B from 'bar.js'",
      "import A from 'foo.js'\nimport a from 'bar.js'",
      "import a, * as b from 'foo.js'\nimport c from 'bar.js'",
      "import 'foo.js'\nimport a from 'bar.js'",
      "import B from 'foo.js'\nimport a from 'bar.js'",
      {
        code: "import a from 'foo.js'\nimport B from 'bar.js'",
        options: ignoreCaseArgs
      },
      "import {a, b, c, d} from 'foo.js'",
      {
        code: "import {b, A, C, d} from 'foo.js'",
        options: [
          {
            ignoreMemberSort: true
          }
        ]
      },
      {
        code: "import {B, a, C, d} from 'foo.js'",
        options: [
          {
            ignoreMemberSort: true
          }
        ]
      },
      {
        code: "import {a, B, c, D} from 'foo.js'",
        options: ignoreCaseArgs
      },
      "import a, * as b from 'foo.js'",
      "import * as a from 'foo.js'\n\nimport b from 'bar.js'",
      "import * as bar from 'bar.js'\nimport * as foo from 'foo.js'",
      {
        // https://github.com/eslint/eslint/issues/5130
        code: "import 'foo'\nimport bar from 'bar'",
        options: ignoreCaseArgs
      },
      // https://github.com/eslint/eslint/issues/5305
      "import React, {Component} from 'react'"
    ],
    invalid: [
      {
        code: "import a from 'foo.js'\nimport A from 'bar.js'",
        output: null,
        errors: [expectedError]
      },
      {
        code: "import b from 'foo.js'\nimport a from 'bar.js'",
        output: null,
        errors: [expectedError]
      },
      {
        code: "import {b, c} from 'foo.js'\nimport {a, d} from 'bar.js'",
        output: null,
        errors: [expectedError]
      },
      {
        code: "import * as foo from 'foo.js'\nimport * as bar from 'bar.js'",
        output: null,
        errors: [expectedError]
      },
      {
        code: "import a from 'foo.js'\nimport {b, c} from 'bar.js'",
        output: null,
        errors: [
          {
            message: "Expected 'multiple' syntax before 'single' syntax.",
            type: 'ImportDeclaration'
          }
        ]
      },
      {
        code: "import a from 'foo.js'\nimport * as b from 'bar.js'",
        output: null,
        errors: [
          {
            message: "Expected 'all' syntax before 'single' syntax.",
            type: 'ImportDeclaration'
          }
        ]
      },
      {
        code: "import a from 'foo.js'\nimport 'bar.js'",
        output: null,
        errors: [
          {
            message: "Expected 'none' syntax before 'single' syntax.",
            type: 'ImportDeclaration'
          }
        ]
      },
      {
        code: "import b from 'bar.js'\nimport * as a from 'foo.js'",
        output: null,
        options: [
          {
            memberSyntaxSortOrder: ['all',
          'single',
          'multiple',
          'none']
          }
        ],
        errors: [
          {
            message: "Expected 'all' syntax before 'single' syntax.",
            type: 'ImportDeclaration'
          }
        ]
      },
      {
        code: "import {b, a, d, c} from 'foo.js'",
        output: "import {a, b, c, d} from 'foo.js'",
        errors: [
          {
            message: "Member 'a' of the import declaration should be sorted alphabetically.",
            type: 'ImportSpecifier'
          }
        ]
      },
      {
        code: "import {a, B, c, D} from 'foo.js'",
        output: "import {B, D, a, c} from 'foo.js'",
        errors: [
          {
            message: "Member 'B' of the import declaration should be sorted alphabetically.",
            type: 'ImportSpecifier'
          }
        ]
      },
      {
        code: "import {zzzzz, ### comment ### aaaaa} from 'foo.js'",
        output: null, // not fixed due to comment
        errors: [
          {
            message: "Member 'aaaaa' of the import declaration should be sorted alphabetically.",
            type: 'ImportSpecifier'
          }
        ]
      },
      {
        code: "import {zzzzz ### comment ###, aaaaa} from 'foo.js'",
        output: null, // not fixed due to comment
        errors: [
          {
            message: "Member 'aaaaa' of the import declaration should be sorted alphabetically.",
            type: 'ImportSpecifier'
          }
        ]
      },
      {
        code: "import {### comment ### zzzzz, aaaaa} from 'foo.js'",
        output: null, // not fixed due to comment
        errors: [
          {
            message: "Member 'aaaaa' of the import declaration should be sorted alphabetically.",
            type: 'ImportSpecifier'
          }
        ]
      },
      {
        code: "import {zzzzz, aaaaa ### comment ###} from 'foo.js'",
        output: null, // not fixed due to comment
        errors: [
          {
            message: "Member 'aaaaa' of the import declaration should be sorted alphabetically.",
            type: 'ImportSpecifier'
          }
        ]
      },
      {
        code: "import {\n  boop,\n  foo,\n  zoo,\n  baz as qux,\n  bar,\n  beep\n} from 'foo.js'",
        output: "import {\n  bar,\n  beep,\n  boop,\n  foo,\n  baz as qux,\n  zoo\n} from 'foo.js'",
        errors: [
          {
            message: "Member 'qux' of the import declaration should be sorted alphabetically.",
            type: 'ImportSpecifier'
          }
        ]
      }
    ]
  });

}).call(this);
