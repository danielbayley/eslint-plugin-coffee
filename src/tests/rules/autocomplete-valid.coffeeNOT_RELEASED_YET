### eslint-env jest ###
###*
# @fileoverview Ensure autocomplete attribute is correct.
# @author Wilco Fiers
###

# -----------------------------------------------------------------------------
# Requirements
# -----------------------------------------------------------------------------

path = require 'path'
{RuleTester} = require 'eslint'
{
  default: parserOptionsMapper
} = require '../eslint-plugin-jsx-a11y-parser-options-mapper'
{axeFailMessage} = require '../eslint-plugin-jsx-a11y-axe-mapping'
rule = require 'eslint-plugin-jsx-a11y/lib/rules/autocomplete-valid'

# -----------------------------------------------------------------------------
# Tests
# -----------------------------------------------------------------------------

ruleTester = new RuleTester parser: path.join __dirname, '../../..'

invalidAutocomplete = [
  message: axeFailMessage 'autocomplete-valid'
  type: 'JSXOpeningElement'
]

inappropriateAutocomplete = [
  message: axeFailMessage 'autocomplete-appropriate'
  type: 'JSXOpeningElement'
]

ruleTester.run 'autocomplete-valid', rule,
  valid: [
    # INAPPLICABLE
    code: '<input type="text" />'
  ,
    # // PASSED AUTOCOMPLETE
    code: '<input type="text" autocomplete="name" />'
  ,
    code: '<input type="text" autocomplete="" />'
  ,
    code: '<input type="text" autocomplete="off" />'
  ,
    code: '<input type="text" autocomplete="on" />'
  ,
    code: '<input type="text" autocomplete="billing family-name" />'
  ,
    code:
      '<input type="text" autocomplete="section-blue shipping street-address" />'
  ,
    code:
      '<input type="text" autocomplete="section-somewhere shipping work email" />'
  ,
    code: '<input type="text" autocomplete />'
  ,
    code: '<input type="text" autocomplete={autocompl} />'
  ,
    code: '<input type="text" autocomplete={autocompl || "name"} />'
  ,
    code: '<input type="text" autocomplete={autocompl || "foo"} />'
  ,
    code: '<input type="text" autocomplete={autocompl or "foo"} />'
  ,
    code: '<Foo autocomplete="bar"></Foo>'
  ].map parserOptionsMapper
  invalid: [
    # FAILED "autocomplete-valid"
    code: '<input type="text" autocomplete="foo" />'
    errors: invalidAutocomplete
  ,
    code: '<input type="text" autocomplete="name invalid" />'
    errors: invalidAutocomplete
  ,
    code: '<input type="text" autocomplete="invalid name" />'
    errors: invalidAutocomplete
  ,
    code: '<input type="text" autocomplete="home url" />'
    errors: invalidAutocomplete
  ,
    code: '<Bar autocomplete="baz"></Bar>'
    errors: invalidAutocomplete
    options: [inputComponents: ['Bar']]
  ,
    # FAILED "autocomplete-appropriate"
    code: '<input type="date" autocomplete="email" />'
    errors: inappropriateAutocomplete
  ,
    code: '<input type="number" autocomplete="url" />'
    errors: inappropriateAutocomplete
  ,
    code: '<input type="month" autocomplete="tel" />'
    errors: inappropriateAutocomplete
  ,
    code: '<Foo type="month" autocomplete="tel"></Foo>'
    errors: inappropriateAutocomplete
    options: [inputComponents: ['Foo']]
  ].map parserOptionsMapper
